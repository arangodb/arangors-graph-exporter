version: 2.1

executors:
  generate-executor:
    machine:
      image: ubuntu-2204:2024.01.1
    working_directory: ~/project

workflows:
  version: 2
  ci:
    jobs:
      - lint-rust
      - build
      - test-rust:
          requires:
            - lint-rust
            - build
          matrix:
            parameters:
              db-mode: [ "single", "cluster" ]
              db-version: [ "3.10", "3.11", "3.12", "nightly" ]
              db-edition: [ "community", "enterprise" ]

jobs:
  build:
    docker:
      - image: cimg/rust:1.75
    steps:
      - checkout
      - run:
          name: Compile arangors-graph-exporter
          command: cargo build --release

  lint-rust:
    docker:
      - image: cimg/rust:1.75
    steps:
      - checkout
      - run:
          name: Install clippy
          command: rustup component add clippy
      - run:
          name: clippy
          command: cargo clippy -- -D warnings
      - run:
          name: fmt
          command: cargo fmt --all -- --check

  test-rust:
    parameters:
      db-mode:
        type: string
      db-version:
        type: string
      db-edition:
        type: string
    executor: generate-executor
    steps:
      - checkout
      - run:
          name: Install Rust
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source $HOME/.cargo/env
      - run:
          name: Set Docker Image
          command: |
            if [[ "<< parameters.db-version >>" == "nightly" ]]; then
              if [[ "<< parameters.db-edition >>" == "enterprise" ]]; then
                echo 'export DOCKER_IMAGE="docker.io/arangodb/enterprise-preview:devel-nightly"' >> $BASH_ENV
              else
                echo 'export DOCKER_IMAGE="docker.io/arangodb/arangodb-preview:devel-nightly"' >> $BASH_ENV
              fi
            else
              if [[ "<< parameters.db-edition >>" == "enterprise" ]]; then
                echo 'export DOCKER_IMAGE="docker.io/arangodb/enterprise:<< parameters.db-version >>"' >> $BASH_ENV
              else
                echo 'export DOCKER_IMAGE="docker.io/arangodb/arangodb:<< parameters.db-version >>"' >> $BASH_ENV
              fi
            fi
      - run:
          name: Start Database
          command: ./docker/start_db.sh
          environment:
            STARTER_MODE: << parameters.db-mode >>
            #DOCKER_IMAGE: docker.io/arangodb/arangodb:<< parameters.db-version >>
            ARANGODB_DB_URL: http://172.28.0.1:8529
      - run:
          name: Cargo Test
          command: cargo test